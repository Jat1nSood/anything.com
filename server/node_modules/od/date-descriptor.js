"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dateStringAsDate = exports.dateDescriptorAsDate = exports.isDateDescriptor = void 0;
const parse_1 = require("./parse");
function isDateDescriptor(value) {
    if (typeof value !== 'object' || value === null) {
        return false;
    }
    return (0, parse_1.has)('year', value);
}
exports.isDateDescriptor = isDateDescriptor;
function completeDateDescriptor(value) {
    var _a;
    return {
        year: value.year,
        month: value.month || 0,
        date: (_a = value.date) !== null && _a !== void 0 ? _a : 1,
        hour: value.hour || 0,
        minute: value.minute || 0,
        second: value.second || 0,
        millisecond: value.millisecond || 0,
    };
}
function dateDescriptorArray(value) {
    const date = completeDateDescriptor(value);
    return [
        date.year,
        date.month,
        date.date,
        date.hour,
        date.minute,
        date.second,
        date.millisecond,
    ];
}
function dateStringAsDateDescriptor(datestring) {
    const isoRegex = /^([-+]?(?:\d{2})?\d{4})-(\d{2})-(\d{2})T?(\d{2})?:?(\d{2})?:?(\d{2})?.?(\d{3})?Z?$/;
    const matches = datestring.match(isoRegex);
    if (matches === null) {
        throw new Error(`Expected date-string to be in ISO time, got '${datestring}'`);
    }
    return {
        year: Number.parseInt(matches[1]),
        month: Number.parseInt(matches[2]) - 1,
        date: Number.parseInt(matches[3]),
        hour: Number.parseInt(matches[4]),
        minute: Number.parseInt(matches[5]),
        second: Number.parseInt(matches[6]),
        millisecond: Number.parseInt(matches[7]),
    };
}
function dateDescriptorAsDate(descriptor) {
    const date = new Date(Date.UTC(...dateDescriptorArray(descriptor)));
    date.setUTCFullYear(descriptor.year);
    return date;
}
exports.dateDescriptorAsDate = dateDescriptorAsDate;
function dateStringAsDate(datestring) {
    return dateDescriptorAsDate(dateStringAsDateDescriptor(datestring));
}
exports.dateStringAsDate = dateStringAsDate;
//# sourceMappingURL=date-descriptor.js.map