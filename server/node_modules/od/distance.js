"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.distance = void 0;
const get_1 = require("./get");
const curry_1 = require("./curry");
const parse_1 = require("./parse");
const unit_of_time_1 = require("./unit-of-time");
exports.distance = (0, curry_1.curry)(function distance(unit, a, b) {
    (0, parse_1.parseDate)(a);
    (0, parse_1.parseDate)(b);
    switch (unit) {
        case 'year':
            return (0, get_1.get)('year', b) - (0, get_1.get)('year', a);
        case 'month':
            return ((0, get_1.get)('year', b) - (0, get_1.get)('year', a)) * 12 + (0, get_1.get)('month', b) - (0, get_1.get)('month', a);
        case 'millisecond':
        case 'second':
        case 'minute':
        case 'hour':
        case 'day':
        case 'week':
            const milliseconds = b.getTime() - a.getTime();
            return Math.round(milliseconds / unit_of_time_1.millisecondsPer[unit]);
        default:
            throw new Error(`Expected argument 'unit' to be of type '${unit_of_time_1.unitsOfTime.join(' | ')}'`);
    }
});
//# sourceMappingURL=distance.js.map